// Separator Styles //
@mixin separator {
  content: '';
  position: absolute;
}

// Separator Arrow //
.separator-arrow {
  &:before, &:after {
    @include separator;
    bottom: -1px;
    width: 50%;
    z-index: 4;
    @include themed() {
      border-bottom: 10vh solid t($bg);
    }

    @include rotate(0.000001deg);
  }

  &:before {
    right: 50%;
    border-right: 100vw solid transparent;
    border-left: 100vw solid;
  }
  &:after {
    left: 50%;
    border-right: 100vw solid;
    border-left: 100vw solid transparent;
  }

  &.inverse:before, &.inverse:after {
    @include themed() {
      border-bottom: 20vh solid t($bg-secondary) !important;
    }
  }
}

// Skew //
@mixin svg($from, $to, $reverse: false, $width: 100%, $height: 100px) {
  $filter: '<filter xmlns="http://www.w3.org/2000/svg" id="shadow" height="150%"><feGaussianBlur in="SourceAlpha" stdDeviation="2"/><feOffset dx="1" dy="1" result="offsetblur"/><feMerge><feMergeNode/><feMergeNode in="SourceGraphic"/></feMerge></filter>';
  $polygons: '<polygon fill="#{$from}" points="0 100 0 0 100 0"/><polygon fill="#{$to}" points="100 0 100 100 0 100"/>';

  @if $reverse == true {
    $polygons: '<polygon fill="#{$from}" points="0 0 100 0 100 100"/><polygon fill="#{$to}" points="0 0 0 100 100 100" filter="url(#shadow)"/>';
  }

  $svg: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="none">#{$filter}#{$polygons}</svg>';

  $svg: str-replace($svg, '#', '%23');
  $svg: str-replace($svg, '<', '%3C');
  $svg: str-replace($svg, '>', '%3E');

  width: $width;
  height: $height;
  background-image: url('data:image/svg+xml,#{$svg}');
  background-repeat: no-repeat;
  background-size: 100% 100%;
}

.separator-diagonal {
  @include themed() {
    @include svg(t($bg-secondary), t($bg));

    // Small fixes for decimal errors leading to a thin line in bg colour
    &.-top {
      margin-bottom: -2px;
    }
    &.-bottom {
      margin-top: -2px;
    }

    &.-reverse {
      @include svg(t($bg), t($bg), true);
    }

    &.-l2d {
      @include svg(t($bg), t($bg-secondary));
      &.-reverse {
        @include svg(t($bg), t($bg-secondary), true);
      }
    }
  }


}
